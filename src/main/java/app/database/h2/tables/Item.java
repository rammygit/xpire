/*
 * This file is generated by jOOQ.
*/
package app.database.h2.tables;


import app.database.h2.Keys;
import app.database.h2.Public;
import app.database.h2.tables.records.ItemRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Item extends TableImpl<ItemRecord> {

    private static final long serialVersionUID = -460403949;

    /**
     * The reference instance of <code>PUBLIC.ITEM</code>
     */
    public static final Item ITEM = new Item();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemRecord> getRecordType() {
        return ItemRecord.class;
    }

    /**
     * The column <code>PUBLIC.ITEM.ID</code>.
     */
    public final TableField<ItemRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_9A441E3A_7FAB_49EE_854D_2C714EA19054)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.ITEM.NAME</code>.
     */
    public final TableField<ItemRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.ITEM.DESCRIPTION</code>.
     */
    public final TableField<ItemRecord, String> DESCRIPTION = createField("DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>PUBLIC.ITEM.STOREINFO</code>.
     */
    public final TableField<ItemRecord, String> STOREINFO = createField("STOREINFO", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>PUBLIC.ITEM.PURCHASEDON</code>.
     */
    public final TableField<ItemRecord, Timestamp> PURCHASEDON = createField("PURCHASEDON", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.ITEM.BESTBY</code>.
     */
    public final TableField<ItemRecord, Timestamp> BESTBY = createField("BESTBY", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.ITEM</code> table reference
     */
    public Item() {
        this("ITEM", null);
    }

    /**
     * Create an aliased <code>PUBLIC.ITEM</code> table reference
     */
    public Item(String alias) {
        this(alias, ITEM);
    }

    private Item(String alias, Table<ItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private Item(String alias, Table<ItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ItemRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ItemRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ItemRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemRecord>>asList(Keys.CONSTRAINT_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Item as(String alias) {
        return new Item(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Item rename(String name) {
        return new Item(name, null);
    }
}
