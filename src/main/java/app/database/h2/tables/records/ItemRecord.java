/*
 * This file is generated by jOOQ.
*/
package app.database.h2.tables.records;


import app.database.h2.tables.Item;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemRecord extends UpdatableRecordImpl<ItemRecord> implements Record6<Integer, String, String, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1740168470;

    /**
     * Setter for <code>PUBLIC.ITEM.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.ITEM.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ITEM.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.ITEM.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.ITEM.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.ITEM.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.ITEM.STOREINFO</code>.
     */
    public void setStoreinfo(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.ITEM.STOREINFO</code>.
     */
    public String getStoreinfo() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.ITEM.PURCHASEDON</code>.
     */
    public void setPurchasedon(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.ITEM.PURCHASEDON</code>.
     */
    public Timestamp getPurchasedon() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>PUBLIC.ITEM.BESTBY</code>.
     */
    public void setBestby(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.ITEM.BESTBY</code>.
     */
    public Timestamp getBestby() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String, Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String, Timestamp, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Item.ITEM.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Item.ITEM.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Item.ITEM.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Item.ITEM.STOREINFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Item.ITEM.PURCHASEDON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Item.ITEM.BESTBY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getStoreinfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getPurchasedon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getBestby();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemRecord value4(String value) {
        setStoreinfo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemRecord value5(Timestamp value) {
        setPurchasedon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemRecord value6(Timestamp value) {
        setBestby(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemRecord values(Integer value1, String value2, String value3, String value4, Timestamp value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ItemRecord
     */
    public ItemRecord() {
        super(Item.ITEM);
    }

    /**
     * Create a detached, initialised ItemRecord
     */
    public ItemRecord(Integer id, String name, String description, String storeinfo, Timestamp purchasedon, Timestamp bestby) {
        super(Item.ITEM);

        set(0, id);
        set(1, name);
        set(2, description);
        set(3, storeinfo);
        set(4, purchasedon);
        set(5, bestby);
    }
}
